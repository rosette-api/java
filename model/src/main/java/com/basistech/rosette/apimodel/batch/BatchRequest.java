/*
* Copyright 2016 Basis Technology Corp.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
package com.basistech.rosette.apimodel.batch;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;

/**
 * Define a batch job. Serialize this object to json to create a file
 * that requests a job.
 */
public final class BatchRequest {
    // unique ID generated by RosetteAPI
    private final String batchId;
    // URL to call when the entire job is complete.
    private final String completionCallbackUrl;
    // Define the items that make up the batch.
    private final List<BatchRequestItem> items;
    // URL to output the batch results
    private final String batchOutputUrl;

    public static class BatchRequestBuilder {
        private List<BatchRequestItem> items;
        private String batchOutputUrl;
        private String completionCallbackUrl;
        private String id = UUID.randomUUID().toString();

        public BatchRequestBuilder() {
            //
        }

        public BatchRequestBuilder withRequestItems(List<BatchRequestItem> items) {
            this.items = items;
            return this;
        }

        public BatchRequestBuilder withRequestItems(BatchRequestItem... items) {
            this.items = Arrays.asList(items);
            return this;
        }

        /**
         * Specifies where the results should be stored. Only a valid AWS S3 URL
         * is supported at this time. The S3 bucket needs to have a proper policy
         * statement to grant read/write permission to RosetteAPI within the batch
         * processing time window. RosetteAPI's AWS account number is 625892746452.
         *
         * Example policy statement:
         *
         * <pre>
         *     <code>
         *         {
         *            "Version": "2012-10-17",
         *            "Id": "Policy1462373421611",
         *            "Statement": [
         *                {
         *                    "Sid": "Stmt1462373415064",
         *                    "Effect": "Allow",
         *                    "Principal": {
         *                        "AWS": "arn:aws:iam::625892746452:root"
         *                    },
         *                    "Action": "s3:ListBucket",
         *                    "Resource": "arn:aws:s3:::your-bucket-name",
         *                    "Condition": {
         *                        "StringLike": {
         *                           "s3:prefix": [
         *                               "output-folder-name/*"
         *                           ]
         *                        }
         *                    }
         *                },
         *                {
         *                    "Sid": "Stmt1462373415064",
         *                    "Effect": "Allow",
         *                    "Principal": {
         *                        "AWS": "arn:aws:iam::625892746452:root"
         *                    },
         *                    "Action": [
         *                        "s3:GetObject",
         *                        "s3:PutObject",
         *                        "s3:DeleteObject"
         *                    ],
         *                    "Resource": "arn:aws:s3:::your-bucket-name/output-folder-name/*"
         *                }
         *            ]
         *        }
         *     </code>
         * </pre>
         *
         * @param batchOutputUrl AWS S3 URL where results will be saved
         * @return BatchRequestBuilder
         */
        public BatchRequestBuilder withBatchOutputUrl(String batchOutputUrl) {
            this.batchOutputUrl = batchOutputUrl;
            return this;
        }

        /**
         * A URL for RosetteAPI to call to inform you the completion of the batch.
         * It must be accessible on the Internet and can only be http: or https:.
         * RosetteAPI will use the GET method so optional parameters need to be
         * included as query parameters in the URL.
         *
         * @param completionCallbackUrl a URL for RosetteAPI to call when batch completes
         * @return BatchRequestBuilder
         */
        public BatchRequestBuilder withCompletetionCallbackUrl(String completionCallbackUrl) {
            this.completionCallbackUrl = completionCallbackUrl;
            return this;
        }

        /**
         * A Unique id for this batch request. This method is for internal use, customers should
         * not call this and allow the default to be used.
         * @param id an ID string.
         * @return this.
         */
        public BatchRequestBuilder withId(String id) {
            this.id = id;
            return this;
        }

        public BatchRequest build() {
            return new BatchRequest(id, items, completionCallbackUrl, batchOutputUrl);
        }
    }

    private BatchRequest(String batchId, List<BatchRequestItem>items, String completionCallbackUrl, String batchOutputUrl) {
        this.batchId = batchId;
        this.completionCallbackUrl = completionCallbackUrl;
        this.items = items;
        this.batchOutputUrl = batchOutputUrl;
    }

    public String getBatchId() {
        return batchId;
    }

    public String getCompletionCallbackUrl() {
        return completionCallbackUrl;
    }

    public List<BatchRequestItem> getItems() {
        return items;
    }

    public String getBatchOutputUrl() {
        return batchOutputUrl;
    }
}
